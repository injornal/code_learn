/* src/components/Navbar/Navbar.module.css */

/* Styles for the main navigation bar container */
.nav {
  background-color: #2c3e50; /* A deep, professional blue-grey */
  padding: 1rem 2rem; /* Generous padding top/bottom and sides */
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2); /* More pronounced shadow for depth */
  border-radius: 10px; /* Slightly rounded corners for the entire nav */
  margin-bottom: 25px; /* Space below the navbar */
  display: flex; /* Use flexbox to align content within the nav */
  align-items: center; /* Vertically center items */
  justify-content: center; /* Center the ul horizontally by default */
}

/* Styles for the unordered list within the nav */
.ul {
  list-style: none; /* Remove default bullet points */
  margin: 0; /* Remove default margin */
  padding: 0; /* Remove default padding */
  display: flex; /* Arrange list items horizontally */
  align-items: center; /* Vertically center list items */
  width: 100%; /* Take full width of the nav to allow space-between */
  justify-content: space-between; /* Pushes first and last items to edges, others distribute */
  gap: 20px; /* Minimum space between items, for when they are closer */

  /* For responsiveness, allow items to wrap if needed */
  flex-wrap: wrap;
}

/* Styles for each list item (li) */
/* The user's JSX uses 'left' for all list items. We'll style it generally. */
.left {
  /* No specific styles needed on the li itself if link takes care of padding */
  /* If you want some minimum space around each li, you could add padding here */
}

/* Styles for the Link components (which render as <a> tags) */
.left a {
  color: #ecf0f1; /* Light text color for contrast */
  text-decoration: none; /* Remove underline */
  font-size: 1.15rem; /* Slightly larger font size */
  font-weight: 500; /* Medium font weight */
  padding: 0.7rem 1.2rem; /* Generous padding around the link text */
  border-radius: 8px; /* Rounded corners for the link background */
  transition: background-color 0.3s ease, color 0.3s ease, transform 0.1s ease; /* Smooth transitions */
  display: block; /* Make the whole padding area clickable */
  white-space: nowrap; /* Prevent links from breaking into multiple lines */
}

/* Hover and Focus states for links */
.left a:hover,
.left a:focus {
  background-color: #34495e; /* Slightly darker background on hover/focus */
  color: #ffffff; /* Ensure text remains white */
  transform: translateY(-2px); /* Subtle lift effect */
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1); /* Add a small shadow on hover */
}

/* Active state for links (when clicked) */
.left a:active {
  transform: translateY(0); /* Reset lift on click */
  background-color: #1a242f; /* Even darker background on active */
}

/* Optional: Styles for the active link (if using NavLink) */
/* If you decide to switch to NavLink from 'react-router-dom',
   you can use its 'className' prop with an 'isActive' callback:
   <NavLink to="/" className={({ isActive }) => isActive ? styles.activeLink : styles.leftLink}>
*/
/*
.activeLink {
  background-color: #007bff;
  color: white;
  font-weight: bold;
}

.activeLink:hover {
  background-color: #0056b3;
}
*/

/* Responsive adjustments for smaller screens */
@media (max-width: 768px) {
  .nav {
    padding: 0.8rem 1rem; /* Reduce padding */
    border-radius: 5px; /* Less rounded */
  }

  .ul {
    flex-direction: column; /* Stack items vertically */
    gap: 10px; /* Adjust gap for vertical stacking */
    align-items: stretch; /* Make items stretch to fill width */
    justify-content: center; /* Center the column */
  }

  .left a {
    font-size: 1rem; /* Slightly smaller font */
    padding: 0.6rem 1rem; /* Adjust padding */
    text-align: center; /* Center text within the stacked links */
  }
}

/* For very small screens, ensure no horizontal overflow */
@media (max-width: 480px) {
  .nav {
    padding: 0.6rem 0.5rem;
  }
}
